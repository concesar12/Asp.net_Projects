<h1>Home</h1>
@*This is for partial view result*@
<button class="button button-blue-back" type="button" id="button-load">Load Programming Languages</button>

<div class="box programming-languages-content">

</div>

<script>
    document.querySelector("#button-load").addEventListener("click", async function() {
       var response = await fetch("programming-languages");
       var languages = await response.text();
       document.querySelector(".programming-languages-content").innerHTML = languages;
    });
</script>

@*We commented this first part because of the partial view result*@
@{
    //ListModel listModel = new ListModel();
    //listModel.ListTitle = "Countries";
    //listModel.ListItems = new List<string>()
    //        {
    //           "USA",
    //            "Colombia",
    //            "Uruguay",
    //            "Haiti"
    //        };
}
@*<partial name="_ListPartialView" model="listModel"></partial> @*This tag helper is necesary to add the partial view /A tag helper is a tag that internally is taken as a c# class*@


@*By doing this below I can modify the content passed to the ViewData to show what I want to show*@
@*@{
    var myViewData = new ViewDataDictionary(ViewData);
    myViewData["ListTitle"] = "Coutries";
    myViewData["ListItems"] = new List<string>()
            {
                "USA",
                "Colombia",
                "Uruguay",
                "Haiti"
            };
}*@
@*In this case myViewData is the only thing that is going to be shared for this view, it is necessary to pass the element view-datga to specify what will be displayed*@
@*<div class="box">
    <partial name="_ListPartialView" view-data="myViewData"></partial>
</div>

<h3>ListTitle in view: @ViewBag.ListTitle</h3>*@